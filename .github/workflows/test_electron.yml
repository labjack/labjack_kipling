name: Electron build


on: workflow_dispatch
#on:
#  push: # pull_request:
#    branches: [ electron ] # master

jobs:
  build:
    environment: kipling_env

    strategy:
      matrix:
        node-version: [12.16.3]
        platform: [macos-latest]
        #platform: [ubuntu-18.04, macos-latest, windows-latest]

    runs-on: ${{ matrix.platform }}

    steps:
#      - name: Download ljm
#        uses: wei/wget@v1
#        with:
#          args: -O labjack_ljm_software.tar.gz https://labjack.com/sites/default/files/software/labjack_ljm_software_2019_07_16_x86_64.tar.gz
#      - name: Install ljm
#        run: tar xfz labjack_ljm_software.tar.gz && cd ./labjack_ljm_software_2019_07_16_x86_64 && sudo ./labjack_ljm_installer.run
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}
      #- run: npm ci # doesn't work with node8
      - run: npm install
      - run: npm run setup_ci
      #- name: Fix lerna mess
        #run: node ./scripts/fix_lerna_backup.js
      - name: Check ENV
        env:
          CSC_LINK: ${{ secrets.CERTIFICATE_P12 }}
          CSC_KEY_PASSWORD: ${{ secrets.CERTIFICATE_P12_PASSWORD }}
          BUILD_DIR: ${{ github.workspace }}/build
          USE_HARD_LINKS: "false"
        run: echo "$GITHUB_CONTEXT"
      - name: Build and Sign
        env:
          CSC_LINK: ${{ secrets.CERTIFICATE_P12 }}
          CSC_KEY_PASSWORD: ${{ secrets.CERTIFICATE_P12_PASSWORD }}
          BUILD_DIR: ${{ github.workspace }}/build
          USE_HARD_LINKS: "false"
        run: npm run build
      - run: ls ${{ github.workspace }}/build/output/dist

      - uses: actions/upload-artifact@v2
        with:
          name: my-artifact
          path: ${{ github.workspace }}/build/output/dist/*



